---
import type { GetStaticPaths } from "astro";
import Layout from "/presentation/layouts/Layout.astro";
import PostPage from "/presentation/components/PostPage/index.astro";
import { parseHeading } from "../../libs/parse/parseHeading";
import "highlight.js/styles/monokai-sublime.min.css";
import { AstroSeo } from "@astrolib/seo";
import { NewtArticleRepository } from "/infrastructure/newt/ArticleRepository";
import { NewtCategoryRepository } from "/infrastructure/newt/CategoryRepository";
import { NewtTagRepository } from "/infrastructure/newt/TagRepository";
import { NewtYearMonthRepository } from "/infrastructure/newt/YearMonthRepository";
import { GetArticleData } from "/usecase/getArticleData/GetArticleData";
import { GetPagePaths } from "/usecase/getPagePaths/GetPagePaths";

export const getStaticPaths = (async () => {
  const getPagePaths = new GetPagePaths(new NewtArticleRepository());
  const paths = (await getPagePaths.execute()).map((p) => ({
    params: {
      id: p.articles[0].articleId,
    },
  }));
  return paths;
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const getArticleData = new GetArticleData(
  new NewtArticleRepository(),
  new NewtCategoryRepository(),
  new NewtTagRepository(),
  new NewtYearMonthRepository(),
);
const { article, categories, tags, yearmonths } = await getArticleData.execute(id);
const headings = parseHeading(article.htmlBody);
---

<AstroSeo
  title={article.title}
  description={article.description.replace(
    /<("[^"]*"|'[^']*'|[^'">])*>/g,
    "",
  )}
  openGraph={{
    title: article.title,
    description: article.description.replace(
      /<("[^"]*"|'[^']*'|[^'">])*>/g,
      "",
    ),
    images: [
      {
        url: article.coverImage.src.toString(),
      },
    ],
  }}
  twitter={{
    cardType: "summary_large_image",
  }}
/>
<Layout>
  <main>
    <PostPage
      article={article}
      headings={headings}
      categories={categories}
      tags={tags}
      yearmonths={yearmonths}
    />
  </main>
</Layout>
