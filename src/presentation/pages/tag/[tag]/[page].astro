---
import type { GetStaticPaths } from "astro";
import HomePage from "../../../presentation/components/HomePage/index.astro";
import { newtClient } from "../../../libs/client";
import Layout from "/layouts/Layout.astro";
import { fetchBlogData } from "../../../libs/fetch/fetchBlogData";
import type { ArticleItem, TagItem } from "/types";
import { AstroSeo } from "@astrolib/seo";

export const getStaticPaths = (async ({ paginate }) => {
	const tags = (
		await newtClient.getContents<TagItem>({
			appUid: "asunaroblog",
			modelUid: "tag",
			query: { limit: 100 },
		})
	).items;
	const paths = tags.flatMap(({ _id, ref }) => {
		return paginate(
			ref.map((r) => (r as ArticleItem)._id),
			{ params: { tag: _id }, pageSize: 10 },
		);
	});
	return paths;
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { tag: tagId } = Astro.params;
const { blogs, categories, tags, yearmonths, totalCount } = await fetchBlogData(
	{ pageNumber: page.currentPage, tagId },
);
const tagItem = tags.filter((tag) => tag._id === tagId).pop() as TagItem;
---

<AstroSeo
	title="Asunaro Blog"
	description=`${tagItem.tag}に関する記事一覧`
	openGraph={{
		title: "Asunaro Blog",
		description: `${tagItem.tag}に関する記事一覧`,
		images: [
			{
				url: "https://storage.googleapis.com/p_641d41d3a492e5ac4c9226fe/3ab0e1e0-e610-4dc9-acb4-f7917add37b1/asunaro.png",
			},
		],
	}}
/>
<Layout>
	<main>
		<HomePage
			pageNumber={page.currentPage}
			blogs={blogs}
			categories={categories}
			tags={tags}
			yearmonths={yearmonths}
			totalCount={totalCount}
			tagItem={tagItem}
		/>
	</main>
</Layout>
